{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACTH,EACIF,EAAQ,C,SAAEH,E,MAAUC,IACpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC9BA,EAAM,G,CAIbQ,SACGC,eAAe,eACfC,iBAAiB,UAAUC,eAAgBC,GAC1CA,EAAMC,iBACN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAaC,SAASJ,EAASK,IAAI,UACnCC,EAAYF,SAASJ,EAASK,IAAI,SAClCE,EAASH,SAASJ,EAASK,IAAI,WAC/BG,EAAed,SAASe,cAAc,mBACtCC,EAAahB,SAASe,cAAc,kBACpCE,EAAYjB,SAASe,cAAc,iBACnCG,EAAclB,SAASe,cAAc,mBAC3CD,EAAaK,UAAW,EACxB,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAQQ,IAAK,CAC/B,MACMC,EAAUhC,EAAc+B,EADTZ,EAAaY,EAAIT,GAEtCU,EACGC,MAAK,EAAChC,SAAEA,EAAQC,MAAEA,MACjBgC,QAAQC,IAAI,uBAAqBlC,QAAiBC,MAAU,IAE7DkC,OAAM,EAACnC,SAAEA,EAAQC,MAAEA,MAClBgC,QAAQC,IAAI,sBAAoBlC,QAAeC,MAAU,IAE7D4B,EAASO,KAAKL,E,CAEhB,UACQ7B,QAAQmC,WAAWR,E,CAC1B,QACCN,EAAaK,UAAW,EACxBH,EAAWa,MAAQ,GACnBZ,EAAUY,MAAQ,GAClBX,EAAYW,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      shouldResolve\n        ? resolve({ position, delay })\n        : reject({ position, delay });\n    }, delay);\n  });\n}\n\ndocument\n  .getElementById('promiseForm')\n  .addEventListener('submit', async function (event) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const firstDelay = parseInt(formData.get('delay'));\n    const delayStep = parseInt(formData.get('step'));\n    const amount = parseInt(formData.get('amount'));\n    const submitButton = document.querySelector('[type=\"submit\"]');\n    const delayInput = document.querySelector('[name=\"delay\"]');\n    const stepInput = document.querySelector('[name=\"step\"]');\n    const amountInput = document.querySelector('[name=\"amount\"]');\n    submitButton.disabled = true;\n    const promises = [];\n    for (let i = 1; i < amount; i++) {\n      const currentDelay = firstDelay + i * delayStep;\n      const promise = createPromise(i, currentDelay);\n      promise\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      promises.push(promise);\n    }\n    try {\n      await Promise.allSettled(promises);\n    } finally {\n      submitButton.disabled = false;\n      delayInput.value = '';\n      stepInput.value = '';\n      amountInput.value = '';\n    }\n  });\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","getElementById","addEventListener","async","event","preventDefault","formData","FormData","target","firstDelay","parseInt","get","delayStep","amount","submitButton","querySelector","delayInput","stepInput","amountInput","disabled","promises","i","promise","then","console","log","catch","push","allSettled","value"],"version":3,"file":"03-promises.62c4a559.js.map"}